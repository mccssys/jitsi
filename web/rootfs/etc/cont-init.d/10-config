#!/usr/bin/with-contenv bash

# make our folders
mkdir -p \
    /config/{nginx/site-confs,keys} \
    /run \
    /var/lib/nginx/tmp/client_body \
    /var/tmp/nginx

# generate keys (maybe)
if [[ $DISABLE_HTTPS -ne 1 ]]; then
    if [[ $ENABLE_LETSENCRYPT -eq 1 ]]; then
        if [[ ! -f /etc/letsencrypt/live/$LETSENCRYPT_DOMAIN/fullchain.pem ]]; then
            certbot certonly \
                --noninteractive \
                --standalone \
                --preferred-challenges http \
                -d $LETSENCRYPT_DOMAIN \
                --agree-tos \
                --email $LETSENCRYPT_EMAIL
            cp /defaults/letsencrypt-renew /etc/cron.monthly/
        fi
    else
        # use self-signed certs
        if [[ -f /config/keys/cert.key && -f /config/keys/cert.crt ]]; then
            echo "using keys found in /config/keys"
        else
            echo "generating self-signed keys in /config/keys, you can replace these with your own keys if required"
            SUBJECT="/C=US/ST=TX/L=Austin/O=jitsi.org/OU=Jitsi Server/CN=*"
            openssl req -new -x509 -days 3650 -nodes -out /config/keys/cert.crt -keyout /config/keys/cert.key -subj "$SUBJECT"
        fi
    fi
    if [[ ! -f /config/nginx/dhparams.pem ]]; then
        openssl dhparam -out /config/nginx/dhparams.pem 2048
    fi
fi

# copy config files
if [[ ! -f /config/nginx/nginx.conf ]]; then
    cp /defaults/nginx.conf /config/nginx/nginx.conf
fi

if [[ ! -f /config/nginx/meet.conf ]]; then
    tpl /defaults/meet.conf > /config/nginx/meet.conf
fi

if [[ ! -f /config/nginx/ssl.conf ]]; then
    tpl /defaults/ssl.conf > /config/nginx/ssl.conf
fi

if [[ ! -f /config/nginx/site-confs/default ]]; then
    tpl /defaults/default > /config/nginx/site-confs/default
fi

if [[ ! -f /config/config.js ]]; then
    # Add environment variables to config
    tpl /defaults/config.json > /tmp/default.json

    # Remove comments from config.json
    config=$(jsonlint-py -Sf /tmp/default.json)
    echo "$config" > /tmp/default.json

    if [[ -f /config/config.json ]]; then
        # Remove comments from custom config.json
        jsonlint-py -Sf /config/config.json > /tmp/custom.json

        # Merge custom config into default config
        config=$(jq -s '.[0] * .[1]' /tmp/default.json /tmp/custom.json)
    fi

    # Save merged config as .js file
    tpl /defaults/config.js --json "{\"config\": $config}" > /config/config.js
fi

if [[ ! -f /config/interface_config.js ]]; then
    cp /defaults/interface_config.js /config/interface_config.js
fi

